[toolchanger]
  t_command_restore_axis:
  params_safe_y: 90
  params_close_y: 40
  params_fast_speed: 30000 # Go as fast as we can
  params_path_speed: 2400 # 40mm/s for the actual change
  params_z_lift: 12 # lift Z height on tool change
  params_liftbar_stow_height: 150.0 # Height to lift above change height
  params_liftbar_min_z: 110
  params_liftbar_max_z: 450
  # Parking position - per tool
  #params_park_x: 142.2
  #params_park_y: -6.0
  #params_park_z: 308.2
  # Path positions relative to the park position
  # use x,y,z; f= multiplier to path speed; verify= Verify tool detected at end of the move.

  # CHANGE THIS!!! Set the path for your printer, see tool_paths.md
  params_dropoff_path: []
  params_pickup_path: []

  # Default shaper params
  #params_input_shaper_freq_x: 70.8
  #params_input_shaper_freq_y: 101.6
  initialize_on: home
  uses_axis: xyz
  on_axis_not_homed: home
  initialize_gcode:
    LIFTBAR_HOME

  before_change_gcode:
    {% set tn = "T"+(tool.tool_number|string) %}
    {% if printer["gcode_macro " + tn ] %}
       SET_GCODE_VARIABLE MACRO={tn} VARIABLE=color VALUE="''"
    {% endif %}

  after_change_gcode:
    {% set tn = "T"+(tool.tool_number|string) %}
    {% if printer["gcode_macro " + tn ] %}
       SET_GCODE_VARIABLE MACRO={tn} VARIABLE=color VALUE="'c44'"
    {% endif %}
    {% if tool.params_input_shaper_freq_x %}
      SET_INPUT_SHAPER SHAPER_FREQ_X={tool.params_input_shaper_freq_x} SHAPER_FREQ_Y={tool.params_input_shaper_freq_y}
    {% endif %}

  dropoff_gcode:
    {% set fast = tool.params_fast_speed|float %}
    {% set path = tool.params_dropoff_path %}
    {% set x = tool.params_park_x|float %}
    {% set y = tool.params_park_y|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float - 10.0 %}
    {% set cur_z = printer.toolhead.position[2]|float %}
    {% set tz = [cur_z - tool.params_park_z + tool.params_z_lift, max_z]|min %}
    {% if tz < tool.params_liftbar_min_z %}
        {% set liftbar_z = tool.params_liftbar_min_z %}
    {% elif tz > tool.params_liftbar_max_z %}
        {% set liftbar_z = tool.params_liftbar_max_z %}
    {% else %}
        {% set liftbar_z = tz %}
    {% endif %}
    {% set z = liftbar_z + tool.params_park_z %}

    RESPOND TYPE=echo MSG='Dropping off {tool.name}'
    G90
    ###############  Align with the dock  ##############
    ROUNDED_G0 Z={ cur_z + 1.0 } D=10 F={fast}
    ROUNDED_G0 Y={tool.params_safe_y} D=0 F={fast}
    LIFTBAR_MOVE Z={ liftbar_z } SYNC=0
    ROUNDED_G0 X={x} Z={ z + path[0]['z']|float } F={fast} D=0
    LIFTBAR_MOVE SYNC=1
    #  ############## Run the path ##############
    ROUNDED_G0 Y={y + path[0]['y']|float} D=0 F={fast}
    {% for pos in path %}
      {% set speed = tool.params_path_speed|float * (pos.get('f', 1.0)|float) %}
      G0 {% if 'x' in pos %}X{x + pos['x']|float}{% endif %} {% if 'y' in pos %}Y{y + pos['y']|float}{% endif %} {% if 'z' in pos %}Z{z + pos['z']|float }{% endif %} F{speed}
    {% endfor %}

  pickup_gcode:
    {% set x = tool.params_park_x|float %}
    {% set y = tool.params_park_y|float %}

    {% set liftbar_z = printer['gcode_macro LIFTBAR_MOVE'].position|float %}
    {% set z = liftbar_z + tool.params_park_z %}
    {% set stow_z = [[liftbar_z, start_position.Z + tool.params_liftbar_stow_height]|max,tool.params_liftbar_max_z] | min %}
    {% set fast = tool.params_fast_speed|float %}
    {% set path = tool.params_pickup_path %}
    RESPOND TYPE=echo MSG='Picking up {tool.name}'
    G90
    #   ##############  Fast to the last point  ##############
    ROUNDED_G0 Y={tool.params_close_y} F={fast} D=5
    ROUNDED_G0 X={x} Z={z + path[0]['z']|float} F={fast} D=5
    LIFTBAR_MOVE Z={ liftbar_z }
    ROUNDED_G0 Y={y + path[0]['y']|float} F={fast} D=0

    # Wait for temp before actually picking up the tool, while the nozzle is resting on it's pad.
    {% if tool.extruder %}
      TEMPERATURE_WAIT SENSOR={printer.toolhead.extruder} MINIMUM={printer[tool.extruder].target}
    {% endif %}
    # Run the path
    {% for pos in path %}
      {% set speed = tool.params_path_speed|float * (pos.get('f', 1.0)|float) %}
      G0 {% if 'x' in pos %}X{x + pos['x']|float}{% endif %} {% if 'y' in pos %}Y{y + pos['y']|float}{% endif %} {% if 'z' in pos %}Z{z + pos['z']|float }{% endif %} F{speed}
      {% if 'verify' in pos %}
        VERIFY_TOOL_DETECTED T={tool.tool_number}
      {% endif %}
    {% endfor %}
    G0 Y{tool.params_safe_y} F{fast}
    LIFTBAR_MOVE Z={stow_z} SYNC=0
    G0 Z{start_position.Z|float + 5.0} F{fast}
    LIFTBAR_MOVE SYNC=1


[gcode_macro _PARK_TOOLHEAD]
gcode:
  {% if not printer.toolchanger.tool %}
    RESPOND TYPE=error MSG='Cannot part toolhead - no tool selected'
  {% else %}
    {% set tool = printer[printer.toolchanger.tool] %}
    G90
    G0 X{tool.params_park_x} Y{tool.params_safe_y|float + 20} F{tool.params_fast_speed}
  {% endif %}

[gcode_macro DOCK_ALIGN_START]
gcode:
    INITIALIZE_TOOLCHANGER # Detect current tool
    _DOCK_ALIGN_START

[gcode_macro _DOCK_ALIGN_START]
gcode:
    {% set tool = printer[printer.toolchanger.tool] %}
    {% set z = tool.params_liftbar_min_z %}
    SET_TOOL_PARAMETER PARAMETER='params_path_speed' VALUE=300
    SET_TOOL_PARAMETER PARAMETER='params_z_lift' VALUE=0.0
    SET_GCODE_OFFSET X=0 Y=0 Z=0
    G0 Y{tool.params_safe_y} F{tool.params_fast_speed}
    G0 X{tool.params_park_x} Z{z + tool.params_park_z|float }
    LIFTBAR_MOVE Z={z}
    G0 Y{tool.params_park_y|float + 100.0}

[gcode_macro DOCK_ALIGN_TEST]
gcode:
    {% set tool = printer[printer.toolchanger.tool] %}
    {% set z = tool.params_liftbar_min_z %}
    {% set curpos = printer.gcode_move.gcode_position %}
    {% if curpos[1] > 30 %}
      # Check if Y is not too far, to very unrealistic tests.
      RESPOND TYPE=error MSG='Test aborted. Tool too far away from the dock.'
    {% else %}
      INITIALIZE_TOOLCHANGER # Detect current tool
      SET_GCODE_OFFSET X=0 Y=0 Z=0
      SET_TOOL_PARAMETER PARAMETER='params_park_x' VALUE={curpos[0]}
      SET_TOOL_PARAMETER PARAMETER='params_park_y' VALUE={curpos[1]}
      SET_TOOL_PARAMETER PARAMETER='params_park_z' VALUE={curpos[2] - z}
      TEST_TOOL_DOCKING RESTORE_AXIS=XZ
      LIFTBAR_MOVE Z={z}
      G0 Y{curpos[1]}
    {% endif %}

[gcode_macro DOCK_ALIGN_DONE]
gcode:
    {% set tool = printer[printer.toolchanger.tool] %}
    {% set curpos = printer.gcode_move.gcode_position %}
    {% set z = tool.params_liftbar_min_z %}
    SET_TOOL_PARAMETER PARAMETER='params_park_x' VALUE={curpos[0]}
    SET_TOOL_PARAMETER PARAMETER='params_park_y' VALUE={curpos[1]}
    SET_TOOL_PARAMETER PARAMETER='params_park_z' VALUE={curpos[2] - z}
    SAVE_TOOL_PARAMETER PARAMETER='params_park_x'
    SAVE_TOOL_PARAMETER PARAMETER='params_park_y'
    SAVE_TOOL_PARAMETER PARAMETER='params_park_z'
    RESET_TOOL_PARAMETER PARAMETER='params_path_speed'
    RESET_TOOL_PARAMETER PARAMETER='params_z_lift'
    G0 Y{tool.params_safe_y} F{tool.params_fast_speed}
